#!/usr/bin/python3

"""Usage: ppc-instruction-table (start-bit:(value|field-name))+

For example:

    ppc-instruction-table 0:31 6:RS 11: 12:RIC 14:PRS 15:R 16:RB 21:274 31:

Which says the field starting at bit 0 (IBM numbering) should have the value
31. The field starting at bit 6 should be called RS. The field starting at bit
11 is reserved (/), and so on.

By default the output also uses IBM bit numbering. To use normal bit numbering
pass '--normal'.
"""

import sys
import string

args = sys.argv

if len(args) < 2:
    print(__doc__, file=sys.stderr)
    sys.exit(1)

max_shift = 0
fields = []

normal = False
if '--normal' in args:
    normal = True
    args.remove('--normal')

for arg in sys.argv[1:]:
    shift, value = arg.split(':')
    if not value:
        value = "/"

    shift = int(shift)
    max_shift = max(shift, max_shift)
    fields.append([shift, value])


width = 31
while max_shift > width:
    width += 32

separators = []
headers = []
values = []

for i in range(0, len(fields)):
    start_bit = fields[i][0]

    j = i + 1
    if j == len(fields):
        end_bit = width
    else:
        end_bit = fields[j][0] - 1

    header = fields[i][1]

    if normal:
        start_bit = width - start_bit
        end_bit = width - end_bit

    if start_bit == end_bit:
        value = " %d " % start_bit
    else:
        value = " %d - %d " % (start_bit, end_bit)

    max_len = max(len(header), len(value))

    if len(header) < max_len:
        header = header.center(max_len)

    if len(value) < max_len:
        value = value.center(max_len)

    separators.append("".center(max_len, "-"))
    headers.append(header)
    values.append(value)


tokens = []

tokens.append("|")

for header in headers:
    tokens.append("%s|" % header)

tokens.append("\n|")

for separator in separators:
    tokens.append("%s|" % separator)

tokens.append("\n|")

for value in values:
    tokens.append("%s|" % value)

if not normal:
    tokens.append(" (IBM bit numbers)")

print(''.join(tokens))
